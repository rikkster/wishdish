import React, { useState } from 'react';

const Rating = ({ value = 0, onChange = false }) => {

  const content = [ 1, 2, 3, 4, 5 ];
  const [ hover, setHover ] = useState( value );
  
  return (

    <div 
      className = {`stars ${ onChange ? "stars-input" : "" }`}
      onMouseLeave = { () => onChange && setHover( value ) }
    >

      { content.map(( el, k ) => (

        <div 
          key = { k }
          className={`star ${ el <= parseInt(hover) ? "active" : ""}`}
          onClick = { () => onChange && onChange( el )}
          onMouseEnter = { () => onChange && setHover( el ) }
        >

          <svg width="21" height="19" viewBox="0 0 21 19" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M16.9977 18.177C17.0959 18.7393 16.5443 19.1788 16.0583 18.9281L10.5302 16.0707L5.0033 18.9281C4.51723 19.1788 3.96568 18.7393 4.0639 18.1782L5.10908 12.1874L0.674 7.93676C0.258448 7.53905 0.472521 6.81204 1.02911 6.73351L7.19692 5.85198L9.94712 0.371531C9.99951 0.260439 10.0822 0.166579 10.1855 0.100856C10.2888 0.0351324 10.4085 0.000244141 10.5308 0.000244141C10.653 0.000244141 10.7728 0.0351324 10.8761 0.100856C10.9794 0.166579 11.0621 0.260439 11.1144 0.371531L13.8646 5.85325L20.0325 6.73478C20.5878 6.81331 20.8031 7.54032 20.3888 7.93802L15.9525 12.1886L16.9977 18.1795V18.177ZM10.821 14.6724L15.4626 17.0713L14.5887 12.0594C14.5682 11.9441 14.5763 11.8254 14.612 11.7139C14.6478 11.6024 14.7103 11.5014 14.794 11.4198L18.4534 7.91142L13.3509 7.18188C13.2452 7.16583 13.145 7.12426 13.0588 7.06073C12.9726 6.9972 12.903 6.91361 12.856 6.81711L10.5327 2.18399L8.20684 6.81711C8.1598 6.91361 8.0902 6.9972 8.00401 7.06073C7.91782 7.12426 7.81761 7.16583 7.71195 7.18188L2.60947 7.91016L6.26885 11.4186C6.35272 11.5002 6.41531 11.6014 6.4511 11.7132C6.4869 11.825 6.4948 11.9439 6.47411 12.0594L5.60019 17.0713L10.2418 14.6724C10.3315 14.6258 10.4311 14.6015 10.532 14.6015C10.633 14.6015 10.7325 14.6258 10.8223 14.6724H10.821Z" fill="#EAEAEA"/>
            <path d="M10.821 14.6724L15.4626 17.0713L14.5887 12.0594C14.5682 11.9441 14.5763 11.8254 14.612 11.7139C14.6478 11.6024 14.7103 11.5014 14.794 11.4198L18.4534 7.91142L13.3509 7.18188C13.2452 7.16583 13.145 7.12426 13.0588 7.06073C12.9726 6.9972 12.903 6.91361 12.856 6.81711L10.5327 2.18399L8.20684 6.81711C8.1598 6.91361 8.0902 6.9972 8.00401 7.06073C7.91782 7.12426 7.81761 7.16583 7.71195 7.18188L2.60947 7.91016L6.26885 11.4186C6.35272 11.5002 6.41531 11.6014 6.4511 11.7132C6.4869 11.825 6.4948 11.9439 6.47411 12.0594L5.60019 17.0713L10.2418 14.6724C10.3315 14.6258 10.4311 14.6015 10.532 14.6015C10.633 14.6015 10.7325 14.6258 10.8223 14.6724H10.821Z" fill="#EAEAEA"/>
            <path d="M16.9977 18.177C17.0959 18.7393 16.5443 19.1788 16.0583 18.9281L10.5302 16.0707L5.0033 18.9281C4.51723 19.1788 3.96568 18.7393 4.0639 18.1782L5.10908 12.1874L0.674 7.93676C0.258448 7.53905 0.472521 6.81204 1.02911 6.73351L7.19692 5.85198L9.94712 0.371531C9.99951 0.260439 10.0822 0.166579 10.1855 0.100856C10.2888 0.0351324 10.4085 0.000244141 10.5308 0.000244141C10.653 0.000244141 10.7728 0.0351324 10.8761 0.100856C10.9794 0.166579 11.0621 0.260439 11.1144 0.371531L13.8646 5.85325L20.0325 6.73478C20.5878 6.81331 20.8031 7.54032 20.3888 7.93802L15.9525 12.1886L16.9977 18.1795V18.177ZM10.821 14.6724L15.4626 17.0713L14.5887 12.0594C14.5682 11.9441 14.5763 11.8254 14.612 11.7139C14.6478 11.6024 14.7103 11.5014 14.794 11.4198L18.4534 7.91142L13.3509 7.18188C13.2452 7.16583 13.145 7.12426 13.0588 7.06073C12.9726 6.9972 12.903 6.91361 12.856 6.81711L10.5327 2.18399L8.20684 6.81711C8.1598 6.91361 8.0902 6.9972 8.00401 7.06073C7.91782 7.12426 7.81761 7.16583 7.71195 7.18188L2.60947 7.91016L6.26885 11.4186C6.35272 11.5002 6.41531 11.6014 6.4511 11.7132C6.4869 11.825 6.4948 11.9439 6.47411 12.0594L5.60019 17.0713L10.2418 14.6724C10.3315 14.6258 10.4311 14.6015 10.532 14.6015C10.633 14.6015 10.7325 14.6258 10.8223 14.6724H10.821Z" fill="#C5C5C5"/>
          </svg>

        </div> 

      ))}
    </div>

  );

}

export default Rating;